# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iA5jkAvi-GxZlEEwh0BXsVk2kDGkY0yO
"""

import pandas as pd
from scipy import stats
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv("/content/student mark.csv")
df.head(5)

df.tail(10)

df.describe()

df.columns

print(df.dtypes)

mean_maths=df['Maths']
Mean_of_maths=np.mean(mean_maths)
print("Mean marks of marks:",Mean_of_maths)

df.rename(columns={'Total mark': 'Total_mark'}, inplace=True)
Total_mark = df['Total_mark']
mean_total_mark = np.mean(Total_mark)
print("Mean of Total mark:", mean_total_mark)

column_names = 'Total mark'
df.columns = df.columns.str.strip()
if column_names in df.columns:
    column_datas = df[column_names].dropna()
    mean_value = column_datas.mean()
    median_value = column_datas.median()
    mode_result = stats.mode(column_datas)
if isinstance(mode_result.mode, np.ndarray) and len(mode_result.mode) > 0:
    mode_values = mode_result.mode[0]
else:
    mode_values = mode_result.mode if mode_result.mode.size > 0 else None
    std_deviation = column_datas.std()
    print(f"Mean: {mean_value}")
    print(f"Median: {median_value}")
    print(f"Mode: {mode_value}")
    print(f"Standard Deviation: {std_deviation}")
    hypothesized_mean = 50
    t_stat, p_value = stats.ttest_1samp(column_data, hypothesized_mean)
    print(f"One-sample t-test results: t-statistic = {t_stat}, p-value = {p_value}")
    alpha = 0.05
if p_value < alpha:
    print("Reject the null hypothesis: The mean mark is significantly different from the hypothesized mean.")
else:
    print("Fail to reject the null hypothesis: There is no significant difference from the")

Marks=df['Chemistry']
plt.figure(figsize=(10,10))
plt.hist(Marks.dropna(), bins=10, edgecolor='k', alpha=0.7)
plt.title("Chemistry results")
plt.xlabel("Frequency")
plt.ylabel("Marks")
plt.show()

# @title Maths

from matplotlib import pyplot as plt
df['Maths'].plot(kind='hist', bins=20, title='Maths')
plt.gca().spines[['top', 'right',]].set_visible(False)

from matplotlib import pyplot as plt
df['physics'].plot(kind='hist', bins=20, title='physics')
plt.gca().spines[['top', 'right',]].set_visible(False)

from matplotlib import pyplot as plt
df['Total mark'].plot(kind='hist', bins=20, title='Total mark')
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Total mark vs Pass mark

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Total mark', y='Pass mark', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.title("Total mark VS Pass mark")

# @title Chemistry vs Total mark

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Chemistry', y='Total mark', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title physics vs Chemistry

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='physics', y='Chemistry', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

# @title Maths vs physics

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='Maths', y='physics', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.title("Maths VS Physics")